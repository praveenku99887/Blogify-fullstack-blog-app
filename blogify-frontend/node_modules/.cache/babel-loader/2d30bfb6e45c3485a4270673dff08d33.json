{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAVEEN SINGH RAJPUT\\\\react-spring-boot-blog\\\\demo-blog-frontend\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  userName: \"\",\n  authorities: \"\",\n  token: \"\",\n  isLoggedIn: false,\n  login: loginResponse => {},\n  logout: () => {},\n  ROLES: {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(sessionStorage.getItem(\"token\"));\n  const [userName, setUserName] = useState(sessionStorage.getItem(\"userName\"));\n  const [authorities, setAuthorities] = useState(sessionStorage.getItem(\"authorities\"));\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = _ref => {\n    let {\n      userName,\n      authorities,\n      jwt\n    } = _ref;\n    setUserName(userName);\n    setAuthorities(authorities);\n    setToken(jwt);\n    sessionStorage.setItem(\"userName\", userName);\n    sessionStorage.setItem(\"authorities\", authorities);\n    sessionStorage.setItem(\"token\", jwt);\n  };\n\n  const logoutHandler = () => {\n    setUserName(null);\n    setAuthorities(null);\n    setToken(null);\n    sessionStorage.removeItem(\"userName\");\n    sessionStorage.removeItem(\"authorities\");\n    sessionStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    userName: userName,\n    authorities: authorities,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    ROLES: {\n      admin: \"ROLE_ADMIN\",\n      user: \"ROLE_USER\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"LcmzbrN+SGKfs0USnISpolO/Cbg=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","userName","authorities","token","isLoggedIn","login","loginResponse","logout","ROLES","AuthContextProvider","props","setToken","sessionStorage","getItem","setUserName","setAuthorities","userIsLoggedIn","loginHandler","jwt","setItem","logoutHandler","removeItem","contextValue","admin","user","children"],"sources":["C:/Users/PRAVEEN SINGH RAJPUT/react-spring-boot-blog/demo-blog-frontend/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  userName: \"\",\r\n  authorities: \"\",\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (loginResponse) => {},\r\n  logout: () => {},\r\n  ROLES: {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(sessionStorage.getItem(\"token\"));\r\n  const [userName, setUserName] = useState(sessionStorage.getItem(\"userName\"));\r\n  const [authorities, setAuthorities] = useState(\r\n    sessionStorage.getItem(\"authorities\")\r\n  );\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = ({ userName, authorities, jwt }) => {\r\n    setUserName(userName);\r\n    setAuthorities(authorities);\r\n    setToken(jwt);\r\n    sessionStorage.setItem(\"userName\", userName);\r\n    sessionStorage.setItem(\"authorities\", authorities);\r\n    sessionStorage.setItem(\"token\", jwt);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setUserName(null);\r\n    setAuthorities(null);\r\n    setToken(null);\r\n    sessionStorage.removeItem(\"userName\");\r\n    sessionStorage.removeItem(\"authorities\");\r\n    sessionStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const contextValue = {\r\n    userName: userName,\r\n    authorities: authorities,\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n    ROLES: {\r\n      admin: \"ROLE_ADMIN\",\r\n      user: \"ROLE_USER\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;EACtCC,QAAQ,EAAE,EAD4B;EAEtCC,WAAW,EAAE,EAFyB;EAGtCC,KAAK,EAAE,EAH+B;EAItCC,UAAU,EAAE,KAJ0B;EAKtCC,KAAK,EAAGC,aAAD,IAAmB,CAAE,CALU;EAMtCC,MAAM,EAAE,MAAM,CAAE,CANsB;EAOtCC,KAAK,EAAE;AAP+B,CAApB,CAApB;AAUA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,QAAQ,CAACc,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAD,CAAlC;EACA,MAAM,CAACZ,QAAD,EAAWa,WAAX,IAA0BhB,QAAQ,CAACc,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAD,CAAxC;EACA,MAAM,CAACX,WAAD,EAAca,cAAd,IAAgCjB,QAAQ,CAC5Cc,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAD4C,CAA9C;EAIA,MAAMG,cAAc,GAAG,CAAC,CAACb,KAAzB;;EAEA,MAAMc,YAAY,GAAG,QAAoC;IAAA,IAAnC;MAAEhB,QAAF;MAAYC,WAAZ;MAAyBgB;IAAzB,CAAmC;IACvDJ,WAAW,CAACb,QAAD,CAAX;IACAc,cAAc,CAACb,WAAD,CAAd;IACAS,QAAQ,CAACO,GAAD,CAAR;IACAN,cAAc,CAACO,OAAf,CAAuB,UAAvB,EAAmClB,QAAnC;IACAW,cAAc,CAACO,OAAf,CAAuB,aAAvB,EAAsCjB,WAAtC;IACAU,cAAc,CAACO,OAAf,CAAuB,OAAvB,EAAgCD,GAAhC;EACD,CAPD;;EASA,MAAME,aAAa,GAAG,MAAM;IAC1BN,WAAW,CAAC,IAAD,CAAX;IACAC,cAAc,CAAC,IAAD,CAAd;IACAJ,QAAQ,CAAC,IAAD,CAAR;IACAC,cAAc,CAACS,UAAf,CAA0B,UAA1B;IACAT,cAAc,CAACS,UAAf,CAA0B,aAA1B;IACAT,cAAc,CAACS,UAAf,CAA0B,OAA1B;EACD,CAPD;;EASA,MAAMC,YAAY,GAAG;IACnBrB,QAAQ,EAAEA,QADS;IAEnBC,WAAW,EAAEA,WAFM;IAGnBC,KAAK,EAAEA,KAHY;IAInBC,UAAU,EAAEY,cAJO;IAKnBX,KAAK,EAAEY,YALY;IAMnBV,MAAM,EAAEa,aANW;IAOnBZ,KAAK,EAAE;MACLe,KAAK,EAAE,YADF;MAELC,IAAI,EAAE;IAFD;EAPY,CAArB;EAaA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEF,YAA7B;IAAA,UACGZ,KAAK,CAACe;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA7CM;;GAAMhB,mB;;KAAAA,mB;AA+Cb,eAAeV,WAAf"},"metadata":{},"sourceType":"module"}