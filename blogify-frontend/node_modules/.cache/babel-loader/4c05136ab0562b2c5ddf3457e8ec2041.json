{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRAVEEN SINGH RAJPUT\\\\react-spring-boot-blog\\\\demo-blog-frontend\\\\src\\\\Pages\\\\PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport NewCommentForm from \"../Components/Forms/NewCommentForm\";\nimport CommentsList from \"../Components/CommentsList\";\nimport PostUpdateForm from \"../Components/Forms/PostUpdateForm\";\nimport Loading from \"../Components/Loading\";\nimport { deletePost, getPostById, updatePost } from \"../lib/api\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Banner from \"../Components/Banner\";\nimport AuthContext from \"../store/auth-context\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = props => {\n  _s();\n\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPostUpdated, setIsPostUpdated] = useState(false);\n  const [isPostDeleted, setIsPostDeleted] = useState(false);\n  const [isDeletingPost, setIsDeletingPost] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    id\n  } = useParams();\n  const authCtx = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n\n  const onPostUpdate = (updatedContent, formikHelpers) => {\n    setTimeout(() => {\n      updatePost({\n        id: post.id,\n        content: updatedContent.content\n      }, authCtx.token).then(() => {\n        // console.log(\"Post updated\");\n        setIsPostUpdated(true);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        formikHelpers.setSubmitting(false);\n      });\n    }, 1000);\n  };\n\n  const onPostDelete = () => {\n    setIsDeletingPost(true);\n    setTimeout(() => {\n      deletePost(post.id, authCtx.token).then(() => {\n        setIsPostDeleted(true);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setIsDeletingPost(false);\n      });\n    }, 1000);\n  };\n\n  const fetchPostById = () => {\n    setIsLoading(true);\n    getPostById(id).then(post => {\n      setPost(post);\n      setComments(post.comments);\n    }).catch(error => {\n      // console.log(Error);\n      setError(error.message);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (isPostUpdated) {\n        setIsPostUpdated(false);\n        fetchPostById();\n      }\n\n      if (isPostDeleted) {\n        setIsPostDeleted(false);\n        navigate(\"/\");\n      }\n    }, 1000);\n  }, [isPostUpdated, isPostDeleted]);\n  useEffect(() => {\n    setTimeout(() => {\n      fetchPostById();\n    }, 1000);\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 17\n  }, this);\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(Banner, {\n      className: \"text-danger border-danger\",\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (!isLoading && !error) {\n    content = /*#__PURE__*/_jsxDEV(Col, {\n      className: \"d-flex flex-column justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(PostUpdateForm, {\n        onSubmit: onPostUpdate,\n        onPostDelete: onPostDelete,\n        isDeletingPost: isDeletingPost,\n        isPostDeleted: isPostDeleted,\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isPostUpdated && /*#__PURE__*/_jsxDEV(Banner, {\n        className: \"text-success border-success mt-4\",\n        message: `${t(\"updatedBy\", {\n          type: \"post\"\n        })} ${authCtx.userName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), isPostDeleted && /*#__PURE__*/_jsxDEV(Banner, {\n        className: \"text-danger border-danger mt-4\",\n        message: `${t(\"deleteBy\", {\n          type: \"post\"\n        })} ${authCtx.userName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), (authCtx.isLoggedIn || comments.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ms-2 mt-3 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: t(\"comments\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), authCtx.isLoggedIn && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n        onContentChange: fetchPostById,\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentsList, {\n        onContentChange: fetchPostById,\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-4 d-flex justify-content-center\",\n      style: {\n        marginTop: props.headerHeight,\n        marginBottom: props.footerHeight\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"ka3U+vAoPkFYYvgXMM+M9H1Duis=\", false, function () {\n  return [useParams, useNavigate, useTranslation];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Col","Container","Row","NewCommentForm","CommentsList","PostUpdateForm","Loading","deletePost","getPostById","updatePost","useNavigate","useParams","Banner","AuthContext","useTranslation","PostPage","props","post","setPost","comments","setComments","isLoading","setIsLoading","isPostUpdated","setIsPostUpdated","isPostDeleted","setIsPostDeleted","isDeletingPost","setIsDeletingPost","error","setError","id","authCtx","navigate","t","onPostUpdate","updatedContent","formikHelpers","setTimeout","content","token","then","catch","console","log","finally","setSubmitting","onPostDelete","fetchPostById","message","type","userName","isLoggedIn","length","marginTop","headerHeight","marginBottom","footerHeight"],"sources":["C:/Users/PRAVEEN SINGH RAJPUT/react-spring-boot-blog/demo-blog-frontend/src/Pages/PostPage.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport NewCommentForm from \"../Components/Forms/NewCommentForm\";\r\nimport CommentsList from \"../Components/CommentsList\";\r\nimport PostUpdateForm from \"../Components/Forms/PostUpdateForm\";\r\nimport Loading from \"../Components/Loading\";\r\nimport { deletePost, getPostById, updatePost } from \"../lib/api\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Banner from \"../Components/Banner\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PostPage = (props) => {\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isPostUpdated, setIsPostUpdated] = useState(false);\r\n  const [isPostDeleted, setIsPostDeleted] = useState(false);\r\n  const [isDeletingPost, setIsDeletingPost] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { id } = useParams();\r\n  const authCtx = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const onPostUpdate = (updatedContent, formikHelpers) => {\r\n    setTimeout(() => {\r\n      updatePost(\r\n        { id: post.id, content: updatedContent.content },\r\n        authCtx.token\r\n      )\r\n        .then(() => {\r\n          // console.log(\"Post updated\");\r\n          setIsPostUpdated(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          formikHelpers.setSubmitting(false);\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  const onPostDelete = () => {\r\n    setIsDeletingPost(true);\r\n    setTimeout(() => {\r\n      deletePost(post.id, authCtx.token)\r\n        .then(() => {\r\n          setIsPostDeleted(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n        .finally(() => {\r\n          setIsDeletingPost(false);\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  const fetchPostById = () => {\r\n    setIsLoading(true);\r\n    getPostById(id)\r\n      .then((post) => {\r\n        setPost(post);\r\n        setComments(post.comments);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(Error);\r\n        setError(error.message);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (isPostUpdated) {\r\n        setIsPostUpdated(false);\r\n        fetchPostById();\r\n      }\r\n      if (isPostDeleted) {\r\n        setIsPostDeleted(false);\r\n        navigate(\"/\");\r\n      }\r\n    }, 1000);\r\n  }, [isPostUpdated, isPostDeleted]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchPostById();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  let content = <Loading />;\r\n\r\n  if (error) {\r\n    content = <Banner className=\"text-danger border-danger\" message={error} />;\r\n  }\r\n  if (!isLoading && !error) {\r\n    content = (\r\n      <Col className=\"d-flex flex-column justify-content-center\">\r\n        <PostUpdateForm\r\n          onSubmit={onPostUpdate}\r\n          onPostDelete={onPostDelete}\r\n          isDeletingPost={isDeletingPost}\r\n          isPostDeleted={isPostDeleted}\r\n          post={post}\r\n        />\r\n        {isPostUpdated && (\r\n          <Banner\r\n            className=\"text-success border-success mt-4\"\r\n            message={`${t(\"updatedBy\", { type: \"post\" })} ${authCtx.userName}`}\r\n          />\r\n        )}\r\n        {isPostDeleted && (\r\n          <Banner\r\n            className=\"text-danger border-danger mt-4\"\r\n            message={`${t(\"deleteBy\", { type: \"post\" })} ${authCtx.userName}`}\r\n          />\r\n        )}\r\n\r\n        {(authCtx.isLoggedIn || comments.length > 0) && (\r\n          <div className=\"ms-2 mt-3 mb-2\">\r\n            <h5>{t(\"comments\")}</h5>\r\n          </div>\r\n        )}\r\n\r\n        {authCtx.isLoggedIn && (\r\n          <NewCommentForm onContentChange={fetchPostById} postId={post.id} />\r\n        )}\r\n        <CommentsList onContentChange={fetchPostById} comments={comments} />\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row\r\n        className=\"pt-4 d-flex justify-content-center\"\r\n        style={{\r\n          marginTop: props.headerHeight,\r\n          marginBottom: props.footerHeight,\r\n        }}\r\n      >\r\n        {content}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}